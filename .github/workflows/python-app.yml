# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install packages
      run: |
        python -m pip install poetry black flake8 pytest

    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Cache the virtualenv
      uses: actions/cache@v2
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        python -m poetry install

    - name: 'Create env file'
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env
    - name: 'Google client config file'
      run: |
        echo "${{ secrets.GOOGLE_SHEETS_CLIENT }}" | base64 -d > service.json

    - name: Lint with flake8
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 $(git ls-files '*.py')
        
    - name: Test with pytest
      run: |
        poetry run pytest
